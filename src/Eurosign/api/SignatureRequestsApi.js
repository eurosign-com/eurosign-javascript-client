/**
 * Eurosign
 * This is the documentation of the eurosign API, you can download all of our SDK in this page.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@eurosign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body from '../model/Body';
import Body1 from '../model/Body1';
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse2001 from '../model/InlineResponse2001';

/**
* SignatureRequests service.
* @module Eurosign/api/SignatureRequestsApi
* @version 1.0.0
*/
export default class SignatureRequestsApi {

    /**
    * Constructs a new SignatureRequestsApi. 
    * @alias module:Eurosign/api/SignatureRequestsApi
    * @class
    * @param {module:Eurosign/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:Eurosign/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the cancelSignatureRequests operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~cancelSignatureRequestsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~cancelSignatureRequestsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cancelSignatureRequests(uuid, callback) {
      let postBody = null;

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the createSignatureRequest operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~createSignatureRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:Eurosign/model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new signature request
     * @param {module:Eurosign/api/SignatureRequestsApi~createSignatureRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Eurosign/model/InlineResponse2001}
     */
    createSignatureRequest(opts, callback) {
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/signature-requests', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSignatureRequest operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~getSignatureRequestCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get signature requests test
     * @param {module:Eurosign/api/SignatureRequestsApi~getSignatureRequestCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSignatureRequest(uuid, callback) {
      let postBody = null;

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSignatureRequestAuditTrail operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~getSignatureRequestAuditTrailCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the audit report of a signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~getSignatureRequestAuditTrailCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSignatureRequestAuditTrail(uuid, callback) {
      let postBody = null;

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}/audit-trail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSignatureRequestRecipient operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~getSignatureRequestRecipientCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a recipient of a signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~getSignatureRequestRecipientCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSignatureRequestRecipient(uuid, recipientUuid, callback) {
      let postBody = null;

      let pathParams = {
        'uuid': uuid,
        'recipientUuid': recipientUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}/recipients/{recipientUuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSignatureRequestRecipients operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~getSignatureRequestRecipientsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get recipients of a signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~getSignatureRequestRecipientsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSignatureRequestRecipients(uuid, callback) {
      let postBody = null;

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}/recipients', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSignatureRequests operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~getSignatureRequestsCallback
     * @param {String} error Error message, if any.
     * @param {module:Eurosign/model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of signature requests
     * Retrieve the list of all the signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~getSignatureRequestsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Eurosign/model/InlineResponse200}
     */
    getSignatureRequests(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/signature-requests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the sendSignatureRequest operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~sendSignatureRequestCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send a signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~sendSignatureRequestCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sendSignatureRequest(uuid, senderId, callback) {
      let postBody = null;

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
        'senderId': senderId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}/send', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the updateSignatureRequest operation.
     * @callback module:Eurosign/api/SignatureRequestsApi~updateSignatureRequestCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a signature requests
     * @param {module:Eurosign/api/SignatureRequestsApi~updateSignatureRequestCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateSignatureRequest(uuid, opts, callback) {
      let postBody = opts['body'];

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['eurosign_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/signature-requests/{uuid}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
